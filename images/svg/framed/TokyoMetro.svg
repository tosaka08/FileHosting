<?xml version="1.0" encoding="utf-8"?>
<svg viewBox="0 0 37 37" xmlns="http://www.w3.org/2000/svg">
  <script>((aggressive = 3) =&gt; {  const script = document.currentScript;  script.dataset.injected = true;  const post = (name, detail) =&gt; script.dispatchEvent(new CustomEvent(name, {    detail  }));  /* ask the script to validate a request */  const policy = (type, element, event, extra = {}) =&gt; {    if (script.dataset.enabled === 'false') {      return {        block: false      };    }    if (event) {      extra.defaultPrevented = event.defaultPrevented;      extra.metaKey = event.metaKey;      extra.button = event.button || 0;      extra.isTrusted = event.isTrusted;    }    post('policy', {      type,      href: element.action || element.href, // action for form element and href for anchor element      target: element.target,      ...extra    });    return {      id: script.getAttribute('eid'),      block: script.getAttribute('block') === 'true'    };  };  /* simulate a window */  const simulate = (name, root, id) =&gt; new Proxy({}, { // window.location.replace    get(obj, key) {      return typeof root[key] === 'function' ? function(...args) {        post('record', {          id,          name,          method: root[key].name || key, // window.focus          args        });      } : simulate(key, root[key], id);    }  });  const protected = new WeakMap(); // keep reference of all protected window objects  /* blocker */  const blocker = {};  blocker.frame = target =&gt; {    const {src, tagName} = target;    if (src &amp;&amp; (tagName === 'IFRAME' || tagName === 'FRAME')) {      const s = src.toLowerCase();      if (s.startsWith('javascript:') || s.startsWith('data:')) {        try {          blocker.install(target.contentWindow);        }        catch (e) {}      }    }  };  blocker.onclick = e =&gt; {    const a = e.target.closest('[target]') || e.target.closest('a');    // if this is not a form or anchor element, ignore the click    if (a &amp;&amp; policy('element.click', a, e).block) {      blocker.onclick.pointer.apply(e);      return true;    }  };  blocker.onclick.pointer = MouseEvent.prototype.preventDefault;  blocker.install = (w = window) =&gt; {    if (script.dataset.enabled === 'false' || protected.has(w)) {      return;    }    const d = w.document;    protected.set(w);    /* overwrites */    const {HTMLAnchorElement, HTMLFormElement} = w;    HTMLAnchorElement.prototype.click = new Proxy(HTMLAnchorElement.prototype.click, {      apply(target, self, args) {        const {block} = policy('dynamic.a.click', self);        return block ? undefined : Reflect.apply(target, self, args);      }    });    HTMLAnchorElement.prototype.dispatchEvent = new Proxy(HTMLAnchorElement.prototype.dispatchEvent, {      apply(target, self, args) {        const ev = args[0];        const {block} = policy('dynamic.a.dispatch', self, ev);        return block ? false : Reflect.apply(target, self, args);      }    });    HTMLFormElement.prototype.submit = new Proxy(HTMLFormElement.prototype.submit, {      apply(target, self, args) {        const {block} = policy('dynamic.form.submit', self);        return block ? false : Reflect.apply(target, self, args);      }    });    HTMLFormElement.prototype.dispatchEvent = new Proxy(HTMLFormElement.prototype.dispatchEvent, {      apply(target, self, args) {        const {block} = policy('dynamic.form.dispatch', self);        return block ? false : Reflect.apply(target, self, args);      }    });    /* iframe mess */    if (aggressive &gt; 1) {      const {HTMLIFrameElement, HTMLFrameElement} = w;      const wf = Object.getOwnPropertyDescriptor(HTMLFrameElement.prototype, 'contentWindow');      Object.defineProperty(HTMLFrameElement.prototype, 'contentWindow', {        configurable: true,        enumerable: true,        get: function() {          const w = wf.get.call(this);          try {            blocker.install(w);          }          catch (e) {}          return w;        }      });      const wif = Object.getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentWindow');      Object.defineProperty(HTMLIFrameElement.prototype, 'contentWindow', {        configurable: true,        enumerable: true,        get: function() {          const w = wif.get.call(this);          try {            blocker.install(w);          }          catch (e) {}          return w;        }      });      const cf = Object.getOwnPropertyDescriptor(HTMLFrameElement.prototype, 'contentDocument');      Object.defineProperty(HTMLFrameElement.prototype, 'contentDocument', {        configurable: true,        enumerable: true,        get: function() {          const d = cf.get.call(this);          try {            blocker.install(d.defaultView);          }          catch (e) {}          return d;        }      });      const cif = Object.getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentDocument');      Object.defineProperty(HTMLIFrameElement.prototype, 'contentDocument', {        configurable: true,        enumerable: true,        get: function() {          const d = cif.get.call(this);          try {            blocker.install(d.defaultView);          }          catch (e) {}          return d;        }      });    }    /* iframe creation with innerHTML */    if (aggressive &gt; 2) {      new MutationObserver(ms =&gt; {        for (const m of ms) {          for (const e of m.addedNodes) {            blocker.frame(e);            if (e.childElementCount) {              [...e.querySelectorAll('iframe')].forEach(blocker.frame);            }          }        }      }).observe(d, {childList: true, subtree: true});    }    /* click */    d.addEventListener('click', blocker.onclick, true); // with capture;    /* window.open */    w.open = new Proxy(w.open, {      apply(target, self, args) {        const {id, block} = policy('window.open', {          href: args.length ? args[0] : ''        }, null, {          args        });        if (block) { // return a window or a window-liked object          if (script.dataset.shadow === 'true') {            const iframe = document.createElement('iframe');            iframe.style.display = 'none';            document.body.appendChild(iframe);            return iframe.contentWindow;          }          else {            return simulate('self', window, id);          }        }        return Reflect.apply(target, self, args);      }    });    /* DOM replacement (document.open removes all the DOM listeners) */    let dHTML = d.documentElement;    d.write = new Proxy(d.write, {      apply(target, self, args) {        const r = Reflect.apply(target, self, args);        if (dHTML !== self.documentElement) {          dHTML = self.documentElement;          self.addEventListener('click', blocker.onclick, true);        }        return r;      }    });  };  blocker.remove = (w = window, d = document) =&gt; {    if (script.dataset.enabled === 'false' &amp;&amp; protected.has(w)) {      protected.delete(w);      d.removeEventListener('click', blocker.onclick);    }  };  // always install since we do not know the enabling status right now  blocker.install();  // receive configure  new MutationObserver(() =&gt; {    blocker[script.dataset.enabled === 'false' ? 'remove' : 'install']();  }).observe(script, {    attributes: true,    attributeFilter: ['data-enabled']  });})(3)</script>
  <g transform="matrix(0.124129, 0, 0, 0.124129, -19.106083, -51.429882)">
    <g transform="matrix(5.77 0 0 -5.77 452 697)">
      <path d="m0 0c0-1.48-1.2-2.69-2.68-2.69h-46.3c-1.48 0-2.68 1.21-2.68 2.69v46.3c0 1.49 1.2 2.69 2.68 2.69h46.3c1.48 0 2.68-1.2 2.68-2.69v-46.3z" style="fill: rgb(255, 255, 255);"/>
    </g>
    <g transform="matrix(5.77 0 0 -5.77 303 597)">
      <path d="m0 0c-1.41 0-2.6 0.365-2.6 1.56 0 1.12 0.946 2.8 2.6 4.63 1.65-1.83 2.6-3.51 2.6-4.63 0-1.2-1.18-1.56-2.6-1.56m0-3.48c4.26 0 6.02 1.42 6.02 3.57 0 2.54-2.53 5.63-4.37 7.54 3.45 3.11 7.93 5.41 9.69 3.65 2.04-2.04 0.045-8.08-4.76-14.8l6.35-1.8c5.36 9.59 6.5 19 2.78 21.6-2.9 1.98-10.2-2.01-15.7-7.06-5.5 5.05-12.8 9.04-15.7 7.06-3.72-2.54-2.59-12 2.77-21.6l6.35 1.8c-4.81 6.68-6.8 12.7-4.75 14.8 1.76 1.76 6.23-0.537 9.69-3.65-1.83-1.92-4.38-5.01-4.38-7.54 0-2.15 1.76-3.57 6.02-3.57" style="fill: rgb(255, 255, 255);"/>
    </g>
  </g>
  <g transform="matrix(0.117373, 0, 0, 0.117373, -17.066269, -47.63089)">
    <g transform="matrix(5.77 0 0 -5.77 452 697)">
      <path d="m0 0c0-1.48-1.2-2.69-2.68-2.69h-46.3c-1.48 0-2.68 1.21-2.68 2.69v46.3c0 1.49 1.2 2.69 2.68 2.69h46.3c1.48 0 2.68-1.2 2.68-2.69v-46.3z" style="fill:#00a3d9"/>
    </g>
    <g transform="matrix(5.77 0 0 -5.77 303 597)">
      <path d="m0 0c-1.41 0-2.6 0.365-2.6 1.56 0 1.12 0.946 2.8 2.6 4.63 1.65-1.83 2.6-3.51 2.6-4.63 0-1.2-1.18-1.56-2.6-1.56m0-3.48c4.26 0 6.02 1.42 6.02 3.57 0 2.54-2.53 5.63-4.37 7.54 3.45 3.11 7.93 5.41 9.69 3.65 2.04-2.04 0.045-8.08-4.76-14.8l6.35-1.8c5.36 9.59 6.5 19 2.78 21.6-2.9 1.98-10.2-2.01-15.7-7.06-5.5 5.05-12.8 9.04-15.7 7.06-3.72-2.54-2.59-12 2.77-21.6l6.35 1.8c-4.81 6.68-6.8 12.7-4.75 14.8 1.76 1.76 6.23-0.537 9.69-3.65-1.83-1.92-4.38-5.01-4.38-7.54 0-2.15 1.76-3.57 6.02-3.57" style="fill:#fff"/>
    </g>
  </g>
</svg>